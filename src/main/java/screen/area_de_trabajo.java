
package screen;

import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import com.mysql.cj.result.Row;
import funtion.busquedas;
import java.awt.BorderLayout;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JProgressBar;
import javax.swing.SwingConstants;
import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.poi.sl.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.DateUtil;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.WorkbookFactory;

/**
 *
 * @author Luis
 */
public class area_de_trabajo extends javax.swing.JFrame {

    /**
     * Creates new form area_de_trabajo
     */
    public area_de_trabajo() {
        initComponents();
    }
String usrt = busquedas.usuarioEncontrado;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    private void borrarResultadoAnterior() {
    String path = "src/main/resources/resultado.json";
    if (new File(path).delete()) {
        System.out.println("Archivo anterior eliminado");
    }
}
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        usrX = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        nvop = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(500, 500));
        setPreferredSize(new java.awt.Dimension(540, 400));

        jPanel1.setBackground(new java.awt.Color(14, 14, 78));
        jPanel1.setForeground(new java.awt.Color(14, 14, 78));
        jPanel1.setPreferredSize(new java.awt.Dimension(540, 436));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon.PNG"))); // NOI18N

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/usur.PNG"))); // NOI18N
        jLabel3.setText("jLabel3");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(227, 227, 235));
        jLabel4.setText("Presupower");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(227, 227, 235));
        jLabel5.setText("Calcula, Ahorra y");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(227, 227, 235));
        jLabel6.setText("Conecta");

        usrX.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        usrX.setForeground(new java.awt.Color(227, 227, 235));
        usrX.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        usrX.setText(usrt);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/como.PNG"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        nvop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presu.PNG"))); // NOI18N
        nvop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nvopActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Precio.PNG"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel14.setForeground(new java.awt.Color(227, 227, 235));
        jLabel14.setText("Como usar Presupower");

        jLabel15.setForeground(new java.awt.Color(227, 227, 235));
        jLabel15.setText("Nuevo Presupuesto");

        jLabel16.setForeground(new java.awt.Color(227, 227, 235));
        jLabel16.setText("Consulta Materiales");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(227, 227, 235));
        jLabel9.setText("______________________________________________________________________________________________");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(227, 227, 235));
        jLabel10.setText("______________________________________________________________________________________________");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(usrX, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nvop)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel10)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(usrX, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel3))))
                .addGap(18, 18, 18)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jButton1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nvop, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    try {
            // Crear y mostrar nuevo frame
            qhace nuevoFrame = new qhace();
            nuevoFrame.setLocationRelativeTo(null); // Centrar en pantalla
            nuevoFrame.setVisible(true);

            // Cerrar el frame actual
            this.dispose();
        } catch (Exception e) {

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            // Crear y mostrar nuevo frame
            materiales nuevoFrame = new materiales();
            nuevoFrame.setLocationRelativeTo(null); // Centrar en pantalla
            nuevoFrame.setVisible(true);

            // Cerrar el frame actual
            this.dispose();
        } catch (Exception e) {

        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void nvopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nvopActionPerformed
    
    borrarResultadoAnterior();    
        
        // Crear el diálogo de carga (pero no mostrarlo aún)
    JDialog loadingDialog = new JDialog();
    loadingDialog.setTitle("Procesando archivo");
    loadingDialog.setSize(300, 100);
    loadingDialog.setLocationRelativeTo(null);
    loadingDialog.setModal(false);
    loadingDialog.setDefaultCloseOperation(JDialog.DO_NOTHING_ON_CLOSE);
    
    JPanel panel = new JPanel(new BorderLayout());
    panel.add(new JLabel("Cargando archivo Excel...", SwingConstants.CENTER), BorderLayout.CENTER);
    JProgressBar progressBar = new JProgressBar();
    progressBar.setIndeterminate(true);
    panel.add(progressBar, BorderLayout.SOUTH);
    
    loadingDialog.add(panel);
    
    // Usar SwingWorker para no bloquear la interfaz
    SwingWorker<Void, Void> worker = new SwingWorker<Void, Void>() {
        @Override
        protected Void doInBackground() throws Exception {
            try {
                // Primero mostrar el selector de archivos
                JFileChooser fileChooser = new JFileChooser();
                fileChooser.setDialogTitle("Seleccionar archivo Excel");
                fileChooser.setFileFilter(new FileNameExtensionFilter("Archivos Excel", "xls", "xlsx"));
                
                int returnValue = fileChooser.showOpenDialog(null);
                if (returnValue != JFileChooser.APPROVE_OPTION) {
                    return null; // Usuario canceló
                }
                
                // Ahora mostrar el diálogo de carga
                SwingUtilities.invokeLater(() -> loadingDialog.setVisible(true));
                
                File selectedFile = fileChooser.getSelectedFile();
                
                // Leer archivo Excel
                Workbook workbook = WorkbookFactory.create(selectedFile);
                org.apache.poi.ss.usermodel.Sheet sheet = workbook.getSheetAt(0);
                
        
                JsonObject jsonResult = new JsonObject();
                JsonArray columnaA = new JsonArray();
                JsonArray columnaB = new JsonArray();

               for (org.apache.poi.ss.usermodel.Row row : sheet) {
               // Procesar Columna A (índice 0)
                     Cell cellA = row.getCell(0);
                     if (cellA == null) {
                        cellA = row.createCell(0); // Crea celda vacía si no existe
                            }
    
                  switch (cellA.getCellType()) {
                    case STRING:
                    columnaA.add(cellA.getStringCellValue());
                    break;
                    case NUMERIC:
                        if (DateUtil.isCellDateFormatted(cellA)) {
                            columnaA.add(cellA.getDateCellValue().toString());
                        } else {
                            columnaA.add(cellA.getNumericCellValue());
                                }
                    break;
                    case BOOLEAN:
                    columnaA.add(cellA.getBooleanCellValue());
                    break;
                    case FORMULA:
                    // Evaluar fórmulas si es necesario
                    switch (cellA.getCachedFormulaResultType()) {
                    case NUMERIC:
                    columnaA.add(cellA.getNumericCellValue());
                    break;
                    case STRING:
                    columnaA.add(cellA.getStringCellValue());
                    break;
                    default:
                        columnaA.add("");
                    }
                    break;
                    default:
                    columnaA.add("");
                    }

                // Procesar Columna B (índice 1)
                Cell cellB = row.getCell(1);
                if (cellB == null) {
                cellB = row.createCell(1); // Crea celda vacía si no existe
                    }
    
            switch (cellB.getCellType()) {
                case STRING:
                columnaB.add(cellB.getStringCellValue());
                break;
                case NUMERIC:
             if (DateUtil.isCellDateFormatted(cellB)) {
                columnaB.add(cellB.getDateCellValue().toString());
                } else {
                columnaB.add(cellB.getNumericCellValue());
                    }
                break;
            case BOOLEAN:
            columnaB.add(cellB.getBooleanCellValue());
            break;
            case FORMULA:
            // Evaluar fórmulas si es necesario
            switch (cellB.getCachedFormulaResultType()) {
                case NUMERIC:
                    columnaB.add(cellB.getNumericCellValue());
                    break;
                case STRING:
                    columnaB.add(cellB.getStringCellValue());
                    break;
                default:
                    columnaB.add("");
                    }   
                break;
            default:
            columnaB.add("");
            }
        }
                
            // Crear objeto JSON CORRECTO
               
            jsonResult.add("Descripcion", columnaA);  // Agrega los datos de la columna A
            jsonResult.add("Cantidad", columnaB);  // Agrega los datos de la columna B

            // Ruta del archivo JSON
            String resourcesPath = System.getProperty("user.dir") + File.separator + "src" + 
                     File.separator + "main" + File.separator + "resources" + 
                     File.separator + "datos.json";

            // Verificar si el archivo existe y preguntar por reemplazo
            File jsonFile = new File(resourcesPath);
            if (jsonFile.exists()) {
            jsonFile.delete(); // Eliminar el archivo existente
            }

            // Guardar el nuevo archivo
            try (FileWriter fileWriter = new FileWriter(resourcesPath)) {
            new Gson().toJson(jsonResult, fileWriter); // Usar jsonResult en lugar de jsonObject
            System.out.println("Archivo JSON guardado correctamente en: " + resourcesPath);
            } catch (IOException e) {
            System.err.println("Error al guardar el archivo JSON:");
            e.printStackTrace();
            }
                
                JOptionPane.showMessageDialog(null, 
                    "Archivo procesado y guardado", 
                    "Proceso completado", 
                    JOptionPane.INFORMATION_MESSAGE);
                
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, 
                    "Error al procesar el archivo: " + ex.getMessage(), 
                    "Error", 
                    JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            } finally {
                // Cerrar el diálogo de carga en el EDT
                SwingUtilities.invokeLater(() -> loadingDialog.dispose());
            }
            return null;
        }
    };
    
    worker.execute();

        
    //##############cambio de frame
    
    try {
            // Crear y mostrar nuevo frame
            generator nuevoFrame = new generator();
            nuevoFrame.setLocationRelativeTo(null); // Centrar en pantalla
            nuevoFrame.setVisible(true);

            // Cerrar el frame actual
            this.dispose();
        } catch (Exception e) {

        }
    
    
    }//GEN-LAST:event_nvopActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(area_de_trabajo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(area_de_trabajo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(area_de_trabajo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(area_de_trabajo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new area_de_trabajo().setVisible(true);
            }
        });    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton nvop;
    private javax.swing.JLabel usrX;
    // End of variables declaration//GEN-END:variables
}
